通信机制(IPC)
通信需要:相同的资源(数据/资源/),通知,控制
实现的方式有多种:
管道(pipe),命名管道(FIFO),内存映射,消息队列,共享内存,信号量,信号,套接字

管道:内核中的一个缓冲区
半双工方式通信:同时只能有一个进程在读/写
范围:具有亲缘关系的进程之间进行
是一种单独的文件系统,且只存在于内存中
管道在双方进程都销毁之后消失
管道数据的写入是从尾部添加,在头部读出

atoi("1")->1:将一个字符串转换为一个整数
sprintf(字符数组buf,"写入字符数组中的字符串")
pipe(int pd[2]):父进程调用pipe开辟管道,得到两个文件描述符指向管道的两端
                父进程调用fork创建子进程,那么子进程也有两个文件描述符指向同一管道
                fd[0]:读端
                fd[1]:写端
strcpy(char* a,char *b):将字符串b赋值给a.

signal(SIGPIPE,signalhandler):将错误信息发送到signalhandler(int num)处理
将写端关闭时,且进行写数据时,会出现信号异常的错误,上面的signalhander进行异常信号捕获
同样将读端关闭,进行读,也会出现信号异常错误.
不同的进程进行管道的写数据是不定的,可能一个进程写了一部分数据,另一个进程中途加进来写数据.

命名管道
使用的可以是非亲缘进程
创建命名管道:mkfifo(fifo_name, 0777)

信号

消息队列:内核空间中的内部链表,使用IPC标识符进行识别,不同的消息队列是相互独立的,从队尾加新消息,取消息的顺
序看具体的算法.
可以独立于发送/接收进程而存在/数据可以有选择性的接收
